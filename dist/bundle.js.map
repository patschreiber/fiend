{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/atlases/MapBase.ts","src/atlases/Overworld.ts","src/engine/AssetLoader.ts","src/engine/FiendGame.ts","src/engine/Input/Commands/Command.ts","src/engine/Input/Commands/MoveNorthCommand.ts","src/engine/Input/Commands/MoveSouthCommand.ts","src/engine/Input/InputHandler.ts","src/engine/Renderer.ts","src/entities/Enemy.ts","src/main.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export class MapBase {\n  SM: HTMLImageElement;\n  cols: number;\n  rows: number;\n  tsize: number;\n  tiles: Array<any>;\n  \n  constructor() {\n    this.cols = 0;\n    this.rows = 0;\n    this.tsize = 0;\n    this.tiles = null;\n  }\n\n  /**\n   * Gets the tile value located by the column and row (x,y) coordinates.\n   * This is trivial with a 2D array, but this method allows us to use a 1D\n   * array instead.\n   *\n   * @param {integer} x   The x-axis position of the requested tile.\n   * @param {integer} y   The y-axis position of the requested tile.\n   */\n  getTile(x: number, y: number): number {\n    if (\n      this.cols === 0\n      || this.rows === 0\n      || this.tsize === 0\n    ) {\n      throw new Error(\"Map size needs to have proper dimensions.\");\n    }\n\n    return this.tiles[y * this.cols + x];\n  }\n}\n","import { MapBase } from \"./MapBase\";\n\nexport class Overworld extends MapBase {\n  SM: HTMLImageElement;\n  tiles: Array<any>;\n  layers: Array<any>;\n  cols: number;\n  rows: number;\n  tsize: number;\n  \n  constructor() {\n    super();\n\n    /**\n     * The spritemap to be used.\n     * @var {HTMLImageElement}\n     */\n    this.SM = window.F_LOADER.getImage('TESTNUMBERED');\n\n    this.cols = 20;\n    this.rows = 15;\n    this.tsize = 300;\n    this.tiles = [\n        1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n       21,  2,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,\n        8,  8,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        0,  0,  0,  0,  0,  0,  0,  0,  5,  5,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        0,  0,  0,  0,  0,  0,  0,  0,  5,  0,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        0,  0,  0,  0,  0,  0,  0,  0,  5,  5,  5,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,\n        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10,\n    ];\n    this.layers = [\n      [\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n      ], [\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n      ]\n    ]\n  }\n\n}\n","export class AssetLoader {\n  private _assetList: Array<any>;\n\n  constructor() {\n    this._assetList = [];\n  }\n\n  public initAssets(): Array<any> {\n    return [\n      this.loadImage(\"testTileset\", \"./DAT/1bittest.png\"),\n      this.loadImage(\"testTileset2\", \"./DAT/psychic-swamp.png\"),\n      this.loadImage(\"TESTORIG\", \"./DAT/low-res-spritesheet.png\"),\n      this.loadImage(\"TESTNUMBERED\", \"./DAT/pixel_art_tileset_test.png\"),\n    ];\n  }\n\n  public loadImage(key: string, src: string) {\n    let img = new Image();\n\n    let d = new Promise(function (resolve, reject) {\n      img.onload = function () {\n        this._assetList[key] = img;\n        resolve(img);\n      }.bind(this);\n\n      img.onerror = function () {\n        reject('Could not load image: ' + src);\n      };\n    }.bind(this));\n  \n    img.src = src;\n  \n    return d;\n  }\n\n  public getImage(key: string): HTMLImageElement {\n    return (key in this._assetList) ? this._assetList[key] : null;\n  };\n}","import { InputHandler } from \"./Input/InputHandler\";\nimport { Renderer } from \"./Renderer\";\n\n// Atlases\nimport { MapBase } from \"../atlases/MapBase\";\nimport { Overworld } from \"../atlases/Overworld\";\n\n// Enemies\n// TODO This might change\nimport { Enemy } from \"../entities/Enemy\";\n\n/**\n * The Game superclass. Operations to act upon the main game thread are found\n * here.\n */\nexport class FiendGame {\n\n  public InputHandler: InputHandler;\n  public Renderer: Renderer;\n\n  public canvas: HTMLCanvasElement;\n  public gameObjectCount: number;\n  public gameObjects: Array<any>;\n  public stopToken: number|null;\n\n  /**\n   */\n  public container: HTMLElement;\n  public tickLength: number;\n  public lastFrameTime: number;\n  public maxEntities: number;\n  protected _currentMap: MapBase; \n\n  public ctx: CanvasRenderingContext2D;\n\n  constructor(gamePaneWidth: number, gamePaneHeight: number) {\n\n    /**\n     * \n     */\n    this.canvas = this.genCanvas(gamePaneWidth, gamePaneHeight);\n    this.container = document.getElementById(\"fiend-game\");\n    this.container.insertBefore(this.canvas, this.container.firstChild);\n    this.ctx = this.canvas.getContext('2d');\n\n    /**t\n     * Prevent anti-aliasing in the event a tile gets scaled.\n     * \n     * @property {CanvasRenderingContext2D.imageSmoothingEnabled}\n     */\n    this.ctx.imageSmoothingEnabled = false;\n\n    /**\n     * The ID returned from our main loop's most recent call to\n     * requestAnimationFrame(). The token can then be used when we call\n     * cancelAnimationFrame() to stop the main loop by telling the browser to\n     * cancel the request that corresponds to our token.\n     * @type {number}\n     */\n    this.stopToken = null;\n\n    /**\n     * How frequently the game state updates. It is 16.66 Hz (60ms)\n     * @type {number}\n     */\n    this.tickLength = 60;\n\n    /**\n     * The most recently elapsed tick of the game clock.\n     * @type {double} DOMHighResTimeStamp\n     */\n    this.lastFrameTime = 0;\n\n    this.maxEntities = 1000;\n\n    this.gameObjectCount = 0;\n\n    /**\n     * The list of active game objects to be updated each frame.\n     */\n    this.gameObjects = [\n      // TODO This is a test, do should be empty on init.\n      new Enemy(),\n    ];\n\n    this._currentMap = new Overworld();\n\n    this.Renderer = new Renderer(this.ctx);\n\n    // We need to attach the input handling to the enclosing div, since you \n    // can't get a handle on `canvas` DOM element since it's not focusable. \n    this.InputHandler = new InputHandler();\n\n    // Let's kick off the game loop!\n    this.main(performance.now());\n  }\n\n  /**\n   * \n   * @param {integer} w The width of the canvas, in pixels. \n   * @param {integer} h The height of the canvas, in pixels.\n   */\n  genCanvas(w: number, h: number): HTMLCanvasElement {\n    let canvas = document.createElement('canvas');\n    canvas.id = \"game-pane\";\n    canvas.width = w;\n    canvas.height = h;\n\n    return canvas;\n  }\n\n  /**\n   * Calculates the game state as of a given point in time. It is the authority\n   * for game state. The delta should be used in calculations to make the game\n   * simulation framerate independent.\n   *\n   * @param {float} delta  The difference in time between this frame and last\n   * frame, in seconds.\n   */\n  update(delta: number): void {\n    // TODO Remove clog. \n    // console.log('delta :', delta);\n    for (let i=0; i<this.gameObjectCount; i++) {\n      this.gameObjects[i].update(delta);\n    }\n\n    this.gameObjectCount = this.gameObjects.length;\n  }\n\n  draw(delta: number): void {\n    // Clear the screen\n    this.ctx.clearRect(\n      0, \n      0, \n      this.canvas.width, \n      this.canvas.height\n    );\n\n    // Always store the texture in a var so we don't call \"new Foo()\" multiple\n    // times a second. \n    this.Renderer.drawTileMap(this._currentMap);\n    this.Renderer.draw(this.gameObjectCount, this.gameObjects);\n  }\n\n  /**\n   * Stops the main game loop.\n   */\n  stopMainLoop(): void {\n    window.cancelAnimationFrame(this.stopToken);\n    console.log(\"Goodbye...\");\n  }\n\n  /**\n   * Attempts to gracefully tear down the game.\n   */\n  shutdownGame(): void {}\n\n/**\n  * The main game loop. We use requestAnimationFrame to be thread-safe and not\n  * dominate the browser when the player blurs focus on our tab.\n  *\n  * render() is passed tFrame because it is assumed that the render method will\n  *          calculate how long it has been since the most recently passed\n  *          update tick for extrapolation (purely cosmetic for fast devices).\n  *          It draws the scene.\n  *\n  * update() calculates the game state as of a given point in time.\n  *\n  * init()   Performs whatever tasks are needed before the main loop can run.\n  *\n  *\n  * @param {DOMHighResTimeStamp} tFrame The number of milliseconds since\n  * navigationStart (when the previous document is unloaded.\n  * window.requestAnimationFrame() always provides a DOMHighResTimeStamp to\n  * callbacks as an argument when they are executed.\n  */\n  main(tFrame: DOMHighResTimeStamp): void {\n    // Store the ID returned from our main loop's most recent call to\n    // requestAnimationFrame().\n    this.stopToken = window.requestAnimationFrame(this.main.bind(this));\n  \n    // Delta should be in seconds, not ms, so we divide by 1000.\n    let delta = (tFrame - this.lastFrameTime) / 1000.0;\n    // Keep track of when the last frame happened.\n    this.lastFrameTime = tFrame;\n  \n    this.InputHandler.handleInput();\n    this.update(delta);\n    this.draw(delta);\n  }\n}\n","export abstract class Command {\n  public abstract execute(): void;\n}","import { Command } from \"./Command\";\n\n/**\n * The MoveNorthCommand class.\n */\nexport class MoveNorthCommand extends Command {\n\n  /**\n   * Executes the command.\n   */\n  public execute(): void {\n    console.log(\"Move North!\");\n  }\n}","import { Command } from \"./Command\";\n\n/**\n * The MoveSouthCommand class.\n */\nexport class MoveSouthCommand extends Command {\n\n  /**\n   * Executes the command.\n   */\n  public execute(): void {\n    console.log(\"Move South!\");\n  }\n}","import { Command } from \"./Commands/Command\";\nimport { MoveNorthCommand } from \"./Commands/MoveNorthCommand\";\nimport { MoveSouthCommand } from \"./Commands/MoveSouthCommand\";\n\n/**\n * The interface for the InputHandler\n */\ninterface IInputHandler {\n\n  /**\n   * \n   * @param event The user interaction with a keyboard.\n   * @param command \n   */\n  keyBind(event: KeyboardEvent, command: Command): void;\n\n  /**\n   * Handles any input if a mapped button is pressed. Run once per game update\n   * tick. \n   */\n  handleInput(): void;\n}\n\n/**\n * The ButtonPress Interface.\n * [Keyboard key: pressed] pair\n */\ninterface ButtonStatus {\n  [key: string]: boolean\n}\n\n/**\n * The KeyMap interface. \n */\ninterface KeyMap {\n  [key: string]: Command\n}\n\n/**\n * The built-in control scheme types. Allows a user to change the control scheme\n * without remapping all the keys individually. \n *\n * @type {enum} ControlSchemes\n */\nenum ControlSchemes {\n  DEFAULT,\n  FPS,\n  ONEHANDED_RIGHT,\n  ONEHANDED_LEFT,    \n}\n\n/**\n * Maps a button to a keyboard input key. \n * \n * @type {enum} Button\n */\nenum Button {\n  UP = \"ArrowUp\",\n  DOWN = \"ArrowDown\",\n  LEFT = \"ArrowLeft\",\n  RIGHT = \"ArrowRight\",\n  E = \"e\",\n  Q = \"q\",\n  BSPACE = \"Backspace\",\n  ENTER = \"Enter\",\n  SHIFT = \"Shift\",\n}\n\n/**\n * Available actions for game actors.\n */\nenum Action {\n  moveN,\n  moveS,\n  moveE,\n  moveW,\n  confirm,\n  cancel,\n  interact,\n}\n\n/**\n * The InputHandler class.\n */\nexport class InputHandler implements IInputHandler {\n\n  /**\n   * TODO Structure should be [\"context\"][KeyboardEvent.key][Command]\n   * e.g. \"overworld\": {\"ArrowUp\": this.MoveN, \"ArrowDown\": this.moveS}\n   */\n   private buttonMapping: KeyMap;\n\n  /** \n   * List of buttons that have been pressed.\n   * [Keyboard key: true]\n   */\n  private buttonStatus: ButtonStatus = {\n    ArrowUp: false,\n    ArrowDown: false,\n    ArrowLeft: false,\n    ArrowRight: false,\n    e: false,\n    q: false,\n    Backspace: false,\n    Enter: false,\n    Shift: false,\n  };\n\n  /**\n   * The InputHandler constructor. \n   * Attaches the keydown and keyup KeyboardEvent to the document.\n   */\n  constructor() {\n\n    document.addEventListener(\n      'keydown', (event) => this.buttonPressed(event), false\n    );\n\n    document.addEventListener(\n      'keyup', (event) => this.buttonReleased(event), false\n    );\n\n    // this.moveN = new MoveNorthCommand();\n\n    // TODO: This should read in user-defined input mappings, otheriwse load \n    // default settings. (if user has saved control scheme, else load default)\n    this.loadControlScheme(ControlSchemes.DEFAULT);\n  }\n\n  /**\n   * \n   * @param {KeyboardEvent} event The key to bind the event to \n   * @param {Command} command The command to bind to the button\n   */\n  public keyBind(event: KeyboardEvent, command: Command): void {\n    this.buttonMapping[event.key] = command;\n  }\n\n  /**\n   * Determins if a button was pressed. Callback for when a button is pressed by\n   * the user.\n   *\n   * @param {KeyboardEvent} event The user interaction with a keyboard. \n   */\n  public buttonPressed(event: KeyboardEvent): void {\n    event.preventDefault();\n\n    // Toggles a boolean.\n    this.buttonStatus[event.key] = !this.buttonStatus[event.key];\n  }\n\n  /**\n   * Callback for when a button is released by the user. \n   * \n   * @param {KeyboardEvent} event The user interaction with a keyboard.\n   */\n  private buttonReleased(event: KeyboardEvent): void {\n    event.preventDefault();\n\n    // Toggles a boolean.\n    this.buttonStatus[event.key] = !this.buttonStatus[event.key];\n  }\n  \n  /**\n   * Handles user input. Runs once per game loop. \n   */\n  public handleInput(): void {\n\n    if (this.buttonStatus[Button.UP]) { \n      this.buttonMapping[Button.UP].execute(); \n    }\n    if (this.buttonStatus[Button.DOWN]) { \n      this.buttonMapping[Button.DOWN].execute(); \n    }\n    if (this.buttonStatus[Button.LEFT]) { \n      this.buttonMapping[Button.LEFT].execute(); \n    }\n    if (this.buttonStatus[Button.RIGHT]) { \n      this.buttonMapping[Button.RIGHT].execute(); \n    }\n    if (this.buttonStatus[Button.E]) { \n      this.buttonMapping[Button.E].execute(); \n    }\n    if (this.buttonStatus[Button.Q]) { \n      this.buttonMapping[Button.Q].execute(); \n    }\n    if (this.buttonStatus[Button.BSPACE]) { \n      this.buttonMapping[Button.BSPACE].execute(); \n    }\n    if (this.buttonStatus[Button.ENTER]) { \n      this.buttonMapping[Button.ENTER].execute(); \n    }\n    if (this.buttonStatus[Button.SHIFT]) { \n      this.buttonMapping[Button.SHIFT].execute();\n    }\n\n    // Nothing pressed, so do nothing.\n    return null;\n  }\n\n  /**\n   * \n   * @param controlScheme \n   */\n  private loadControlScheme(controlScheme: ControlSchemes): void {\n    switch(controlScheme) {\n      case 1:\n        break;\n      default: \n      this.buttonMapping = {\n        \"ArrowUp\": new MoveNorthCommand,\n        \"ArrowDown\": new MoveSouthCommand,\n        // \"ArrowRight\": this.moveE,\n        // \"ArrowLeft\": this.moveW,\n        // \"e\": this.interact,\n        // \"q\": this.cancel,\n        // \"Backspace\": this.cancel,\n        // \"Enter\": this.confirm,\n        // \"Shift\": this.cancel,\n      }\n\n\n        // this.buttonMapping[Button.UP] = new MoveNorthCommand;\n        // this.buttonMapping[Button.DOWN] = new MoveSouthCommand;\n        // this.buttonMapping[Button.LEFT] = new MoveNorthCommand;\n        // this.buttonMapping[Button.RIGHT] = new MoveNorthCommand;\n        // this.buttonMapping[Button.E] = new MoveNorthCommand;\n        // this.buttonMapping[Button.Q] = new MoveNorthCommand;\n        // this.buttonMapping[Button.BSPACE] = new MoveNorthCommand;\n        // this.buttonMapping[Button.ENTER] = new MoveNorthCommand;\n        // this.buttonMapping[Button.SHIFT] = new MoveNorthCommand;\n    }\n  }\n}\n\n// var key = {\n//   BACKSPACE: 8,\n//   TAB:       9,\n//   RETURN:   13,\n//   ESC:      27,\n//   SPACE:    32,\n//   PAGEUP:   33,\n//   PAGEDOWN: 34,\n//   END:      35,\n//   HOME:     36,\n//   LEFT:     37,\n//   UP:       38,\n//   RIGHT:    39,\n//   DOWN:     40,\n//   INSERT:   45,\n//   DELETE:   46,\n//   ZERO:     48, ONE: 49, TWO: 50, THREE: 51, FOUR: 52, FIVE: 53, SIX: 54, SEVEN: 55, EIGHT: 56, NINE: 57,\n//   A:        65, B: 66, C: 67, D: 68, E: 69, F: 70, G: 71, H: 72, I: 73, J: 74, K: 75, L: 76, M: 77, N: 78, O: 79, P: 80, Q: 81, R: 82, S: 83, T: 84, U: 85, V: 86, W: 87, X: 88, Y: 89, Z: 90,\n//   TILDA:    192\n// };","import { MapBase } from \"../atlases/MapBase\";\n\nexport class Renderer {\n\n  EMPTY_TILE: number;\n  ctx: CanvasRenderingContext2D;\n  pixels: number;\n  scale: number;\n\n  constructor(context: CanvasRenderingContext2D) {\n    /**\n     * The empty tile value. If this value is set for a position in a map's \n     * array, it will not be rendered. \n     * \n     * @var {integer} \n     */\n    this.EMPTY_TILE = 0;\n\n    /**\n     * The canvas context.\n     * \n     * @var {CanvasRenderingContext2D}\n     */\n    this.ctx = context;\n\n    /**\n     * Multiplier for x,y position to pixels. What size the tiles for the game\n     * will be rendered at. Always use a power of 2 so the scaling prevents\n     * blurring.\n     * \n     * @var {integer}\n     */\n    this.pixels = 32;\n\n    /**\n     * The scale at which the tile will be rendered. 1 = 1x scaling, 2 = 2x \n     * scaling, etc.\n     * \n     * @var {integer}\n     */\n    this.scale = 1;\n  }\n\n  draw(gameObjectCount: number, gameObjects: Array<any>) {    \n    for (let i=0; i<gameObjectCount; i++) {\n      gameObjects[i].draw(this.ctx);\n    }\n  }\n\n  /**\n   * Renders a map according to the coordinates given in the map's file by\n   * translating the coordinates to a spritesheet. \n   * \n   * If a tile is 32x32 pixels, the 1st tile will start at (0,0) on \n   * the spritesheet, the 2nd tile will start at (32,0), the 34d at (64,0) and \n   * so on.\n   * \n   * +---+---+---+---+\n   * | 1 | 2 | 3 | 4 |\n   * +---+---+---+---+\n   * | 5 | 6 | 7 | 8 |\n   * +---+---+---+---+\n   * \n   * 'source x' and 'source y' will get the correct coords in the image file.\n   * So for our first tile, '1', drawImage will grab the subimage at (32,0).\n   * drawImage would get the subimage at (64,32) for tile '7'.\n   * \n   * TODO  https://hashrocket.com/blog/posts/using-tiled-and-canvas-to-render-game-screens\n   *\n   * @param {Object} map  The map object that extends MapBase.\n   */\n  drawTileMap(map: MapBase): void {\n    for (let x=0; x<map.cols; x++) {\n      for (let y=0; y<map.rows; y++) {\n        let tile = map.getTile(x, y);\n\n        // Let's skip rendering empty tiles.\n        if (tile !== this.EMPTY_TILE) { \n          this.ctx.drawImage(\n            // Image Source\n            map.SM, \n            // Source x (See example in comment block)\n            ((tile - 1) % map.cols) * this.pixels, \n            // Source y (See example in comment block)\n            Math.floor(((tile - 1) / map.rows)) * this.pixels,  \n            // Source width\n            this.pixels, \n            // Source height\n            this.pixels, \n            // Target x\n            x * (this.pixels * this.scale), \n            // Target y\n            y * (this.pixels * this.scale),\n            // Target width \n            this.pixels * this.scale,\n             // Target height\n            this.pixels * this.scale,\n          );\n        }\n      }\n    }\n  }\n}\n","export class Enemy {\n  public HP: number;\n  public ATK: number;\n  public speed: number;\n  public position: { x: number, y: number };\n\n  constructor() {\n    this.HP = 100;\n    this.ATK = 1;\n    this.speed = 100;\n    this.position = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  update(delta: number) {\n    this.position.x += this.speed * delta;\n    this.position.y += this.speed * delta;\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.arc(this.position.x, this.position.y, 10, 0, Math.PI*2);\n    ctx.fillStyle = \"#0095DD\";\n    ctx.fill();\n    ctx.closePath();\n  }\n}\n","import { FiendGame } from \"./engine/FiendGame\";\nimport { AssetLoader } from \"./engine/AssetLoader\";\n\n/**\n * We need some global variables so we can load the game and the assets. Let's \n * consider moving the F_LOADER to it's own class so we don't need a global for\n * the assets.\n */\ndeclare global {\n  interface Window { \n    F_LOADER: AssetLoader;\n  }\n}\n\n/**\n * Load a new instance of FiendGame, which loads the game.\n */\nfunction init() {\n\n  // init functionality, for now\n  new FiendGame(640, 480);\n};\n\n/**\n * Ensure the assets are loaded before we initialize the game. We do this with a\n * promise to ensure all the images are loaded and ready to be used.\n * TODO Make this better, more TypeScript-y.\n */\n window.onload = function() {\n\n  window.F_LOADER = new AssetLoader();\n  var p = window.F_LOADER.initAssets();\n  Promise.all(p).then(function () {\n    init();\n  }.bind(this));\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}
{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/engine/FiendGame.ts","src/entities/Enemy.ts","src/main.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;ACEA;;;;IAIa,S,WAAA,S;AAaX,qBAAY,aAAZ,EAAmC,cAAnC,EAAyD;AAAA;;AAEvD;;;AAGA,SAAK,MAAL,GAAc,KAAK,SAAL,CAAe,aAAf,EAA8B,cAA9B,CAAd;AACA,SAAK,SAAL,GAAiB,SAAS,cAAT,CAAwB,YAAxB,CAAjB;AACA,SAAK,SAAL,CAAe,YAAf,CAA4B,KAAK,MAAjC,EAAyC,KAAK,SAAL,CAAe,UAAxD;AACA,SAAK,GAAL,GAAW,KAAK,MAAL,CAAY,UAAZ,CAAuB,IAAvB,CAAX;AAEA;;;;;AAKA,SAAK,GAAL,CAAS,qBAAT,GAAiC,KAAjC;AAEA;;;;;;;AAOA,SAAK,SAAL,GAAiB,IAAjB;AAEA;;;;AAIA,SAAK,UAAL,GAAkB,EAAlB;AAEA;;;;AAIA,SAAK,aAAL,GAAqB,CAArB;AAEA,SAAK,WAAL,GAAmB,IAAnB;AAEA,SAAK,eAAL,GAAuB,CAAvB;AAEA;;;AAGA,SAAK,WAAL,GAAmB,CACjB,IAAI,YAAJ,EADiB,CAAnB;AAGD;AAED;;;;;;;;;8BAKU,C,EAAW,C,EAAS;AAC5B,UAAI,SAAS,SAAS,aAAT,CAAuB,QAAvB,CAAb;AACA,aAAO,EAAP,GAAY,WAAZ;AACA,aAAO,KAAP,GAAe,CAAf;AACA,aAAO,MAAP,GAAgB,CAAhB;AAEA,aAAO,MAAP;AACD;AAED;;;;;;;;;;;2BAQO,K,EAAa;AAClB,WAAK,IAAI,IAAE,CAAX,EAAc,IAAE,KAAK,eAArB,EAAsC,GAAtC,EAA2C;AACzC,aAAK,WAAL,CAAiB,CAAjB,EAAoB,MAApB,CAA2B,KAA3B;AACD;AAED,WAAK,eAAL,GAAuB,KAAK,WAAL,CAAiB,MAAxC;AACD;AAED;;;;;;mCAGY;AACV,aAAO,oBAAP,CAA4B,KAAK,SAAjC;AACA,cAAQ,GAAR,CAAY,YAAZ;AACD;AAED;;;;;;mCAGY,CAEX;;;;;;;;;;;;;;;;;IChHU,K,WAAA,K;AAMX,qBAAA;AAAA;;AACE,aAAK,EAAL,GAAU,GAAV;AACA,aAAK,GAAL,GAAW,CAAX;AACA,aAAK,KAAL,GAAa,GAAb;AACA,aAAK,QAAL,GAAgB;AACd,eAAG,CADW;AAEd,eAAG;AAFW,SAAhB;AAID;;;;+BAEM,K,EAAK;AACV,iBAAK,QAAL,CAAc,CAAd,IAAmB,KAAK,KAAL,GAAa,KAAhC;AACA,iBAAK,QAAL,CAAc,CAAd,IAAmB,KAAK,KAAL,GAAa,KAAhC;AACD;;;+BAEG;AACF,mBAAO,EAAP,CAAU,GAAV,CAAc,SAAd;AACA,mBAAO,EAAP,CAAU,GAAV,CAAc,GAAd,CAAkB,KAAK,QAAL,CAAc,CAAhC,EAAmC,KAAK,QAAL,CAAc,CAAjD,EAAoD,EAApD,EAAwD,CAAxD,EAA2D,KAAK,EAAL,GAAQ,CAAnE;AACA,mBAAO,EAAP,CAAU,GAAV,CAAc,SAAd,GAA0B,SAA1B;AACA,mBAAO,EAAP,CAAU,GAAV,CAAc,IAAd;AACA,mBAAO,EAAP,CAAU,GAAV,CAAc,SAAd;AACD;;;;;;;;;;;ACpBH,OAAO,EAAP,GAAY,IAAI,oBAAJ,CAAc,GAAd,EAAmB,GAAnB,CAAZ","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { Enemy } from \"../entities/Enemy\";\n\n/**\n * The Game superclass. Operations to act upon the main game thread are found\n * here.\n */\nexport class FiendGame {\n\n  public canvas: HTMLCanvasElement;\n  public ctx: CanvasRenderingContext2D;\n  public gameObjectCount: number;\n  public gameObjects: Array<Enemy>;\n  \n  private container: HTMLElement;\n  private stopToken: number|null;\n  private tickLength: number;\n  private lastFrameTime: number;\n  private maxEntities: number;\n\n  constructor(gamePaneWidth: number, gamePaneHeight: number) {\n\n    /**\n     * \n     */\n    this.canvas = this.genCanvas(gamePaneWidth, gamePaneHeight);\n    this.container = document.getElementById(\"fiend-game\");\n    this.container.insertBefore(this.canvas, this.container.firstChild);\n    this.ctx = this.canvas.getContext('2d');\n\n    /**t\n     * Prevent anti-aliasing in the event a tile gets scaled.\n     * \n     * @property {CanvasRenderingContext2D.imageSmoothingEnabled}\n     */\n    this.ctx.imageSmoothingEnabled = false;\n\n    /**\n     * The ID returned from our main loop's most recent call to\n     * requestAnimationFrame(). The token can then be used when we call\n     * cancelAnimationFrame() to stop the main loop by telling the browser to\n     * cancel the request that corresponds to our token.\n     * @type {number}\n     */\n    this.stopToken = null;\n\n    /**\n     * How frequently the game state updates. It is 16.66 Hz (60ms)\n     * @type {number}\n     */\n    this.tickLength = 60;\n\n    /**\n     * The most recently elapsed tick of the game clock.\n     * @type {double} DOMHighResTimeStamp\n     */\n    this.lastFrameTime = 0;\n\n    this.maxEntities = 1000;\n\n    this.gameObjectCount = 0;\n\n    /**\n     * The list of active game objects to be updated each framr\n     */\n    this.gameObjects = [\n      new Enemy(),\n    ];\n  }\n\n  /**\n   * \n   * @param {integer} w The width of the canvas, in pixels. \n   * @param {integer} h The height of the canvas, in pixels.\n   */\n  genCanvas(w: number, h: number): HTMLCanvasElement {\n    let canvas = document.createElement('canvas');\n    canvas.id = \"game-pane\";\n    canvas.width = w;\n    canvas.height = h;\n\n    return canvas;\n  }\n\n  /**\n   * Calculates the game state as of a given point in time. It is the authority\n   * for game state. The delta should be used in calculations to make the game\n   * simulation framerate independent.\n   *\n   * @param {float} delta  The difference in time between this frame and last\n   * frame, in seconds.\n   */\n  update(delta: number): void {\n    for (let i=0; i<this.gameObjectCount; i++) {\n      this.gameObjects[i].update(delta);\n    }\n\n    this.gameObjectCount = this.gameObjects.length;\n  }\n\n  /**\n   * Stops the main game loop.\n   */\n  stopMainLoop(): void {\n    window.cancelAnimationFrame(this.stopToken);\n    console.log(\"Goodbye...\");\n  }\n\n  /**\n   * Attempts to gracefully tear down the game.\n   */\n  shutdownGame(): void {\n\n  }\n}\n","export class Enemy {\n  public HP: number;\n  public ATK: number;\n  public speed: number;\n  public position: { x: number, y: number };\n\n  constructor() {\n    this.HP = 100;\n    this.ATK = 1;\n    this.speed = 100;\n    this.position = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  update(delta) {\n    this.position.x += this.speed * delta;\n    this.position.y += this.speed * delta;\n  }\n\n  draw() {\n    window.FG.ctx.beginPath();\n    window.FG.ctx.arc(this.position.x, this.position.y, 10, 0, Math.PI*2);\n    window.FG.ctx.fillStyle = \"#0095DD\";\n    window.FG.ctx.fill();\n    window.FG.ctx.closePath();\n  }\n}\n","import { Enemy } from \"./entities/Enemy\";\nimport { FiendGame } from \"./engine/FiendGame\";\n\ndeclare global {\n  interface Window { FG: FiendGame }\n}\n\nwindow.FG = new FiendGame(640, 480);\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}